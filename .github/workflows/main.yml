name: Build

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    name: CI
    environment: dev
    runs-on: ubuntu-latest

    steps:
      - name: Obtener código fuente
        uses: actions/checkout@v4
      - name: Obtener SHA corto
        id: short
        run: echo "short_sha=$(git rev-parse --short $GITHUB_SHA)" >> $GITHUB_OUTPUT
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Instalar dependencias
        run: npm install
      - name: Ejecutar pruebas unitarias
        run: npm run test:unit
      - name: Ejecutar pruebas de integración
        run: npm run test:integration
      - name: Crear proyecto en SonarQube
        env:
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          PROJECT_KEY="my-nodejs-app"
          PROJECT_NAME="My NodeJS App"
          echo "Verificando si el proyecto existe..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -u $SONAR_TOKEN: \
            "$SONAR_HOST_URL/api/projects/search?projects=$PROJECT_KEY")
          if [ "$RESPONSE" -eq 404 ]; then
            echo "Proyecto no encontrado, creando..."
            curl -u $SONAR_TOKEN: -X POST "$SONAR_HOST_URL/api/projects/create" \
              -d "name=$PROJECT_NAME" \
              -d "project=$PROJECT_KEY"
          else
            echo "El proyecto existe o la API devolvió el código $RESPONSE"
          fi
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      - name: Crear archivo ZIP del proyecto
        run: zip -r build-artifact.zip . -x "node_modules/*" ".git/*"

      - name: Subir artefacto ZIP
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build-artifact.zip
      - name: Configurar credenciales de Registry de Imágenes
        run: |
          echo "[To-Do] Autenticar en Registry"
      - name: Construir, etiquetar y subir imagen de Docker
        run: |
          echo "[To-Do] Generar imagen"
